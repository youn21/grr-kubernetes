# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.31.1/deployment.json
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grr
  name: grr
spec:
  # replicas: 3
  selector:
    matchLabels:
      app: grr
  template:
    metadata:
      labels:
        app: grr
    spec:
      initContainers:
        - image: registry.plmlab.math.cnrs.fr/anf2024/grr:v4.3.5-docker-15
          name: grr-migrate
          # Injection des variables DB_NAME, DB_USER et DB_PASSWORD via le Secret
          # envFrom:
          #   - secretRef:
          #      name: grr
          env:
            - name: DB_NAME
              value: "grr"
            - name: DB_USER
              value: "grr_user"
            - name: DB_PASSWORD
              value: "grr_password"
            - name: DB_HOST
              value: "mariadb"
          command: ["/var/www/docker/nginx-unit/migrations.sh"]
      containers:
        - image: registry.plmlab.math.cnrs.fr/anf2024/grr:v4.3.5-docker-15
          name: grr
          ports: 
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          # Injection des variables DB_NAME, DB_USER et DB_PASSWORD via le Secret
          # envFrom:
          #   - secretRef:
          #      name: grr
          env:
            - name: DB_NAME
              value: "grr"
            - name: DB_USER
              value: "grr_user"
            - name: DB_PASSWORD
              value: "grr_password"
            - name: DB_HOST
              value: "mariadb"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: grr
  name: grr
spec:
  type: ClusterIP
  selector:
    app: grr
  ports:
  - name: http
    protocol: TCP
    port: 8080
  - name: metrics
    protocol: TCP
    port: 9090
    targetPort: metrics
